
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COMMA FALSE ID IGUAL LCHAV LPAREN NUMBER POT PV RCHAV RETURN RPAREN SOMA TRUE VEZES WHILEprogram : funcdecl\n                | funcdecl program\n                funcdecl : signature bodysignature : ID ID LPAREN sigparams RPAREN\n                 | ID ID LPAREN RPARENsigparams : ID ID\n                  | ID ID COMMA sigparams\n     body : LCHAV stms RCHAV\n             | LCHAV RCHAV stms : stm\n            | stm stms stm :  exp PV\n             | WHILE LPAREN exp RPAREN body\n             | RETURN exp PV exp :    exp IGUAL exp1\n              | exp1exp1 : exp1 SOMA exp2\n         | exp2exp2 : exp2 VEZES exp3\n           | exp3exp3 : exp4 POT exp3\n            | exp4exp4 : call\n            | NUMBER\n            | ID\n            | TRUE\n            | FALSEcall : ID LPAREN params RPAREN\n            | ID LPAREN RPARENparams : exp COMMA params\n            | exp '
    
_lr_action_items = {'ID':([0,2,4,6,7,10,11,14,24,25,27,28,29,31,32,33,34,35,40,51,52,53,],[4,4,8,-3,21,-9,21,21,35,-8,-12,21,21,21,21,21,21,47,-14,21,35,-13,]),'$end':([1,2,5,6,10,25,],[0,-1,-2,-3,-9,-8,]),'LCHAV':([3,37,48,49,],[7,-5,-4,7,]),'RCHAV':([7,9,10,11,25,26,27,40,53,],[10,25,-9,-10,-8,-11,-12,-14,-13,]),'WHILE':([7,10,11,25,27,40,53,],[13,-9,13,-8,-12,-14,-13,]),'RETURN':([7,10,11,25,27,40,53,],[14,-9,14,-8,-12,-14,-13,]),'NUMBER':([7,10,11,14,25,27,28,29,31,32,33,34,40,51,53,],[20,-9,20,20,-8,-12,20,20,20,20,20,20,-14,20,-13,]),'TRUE':([7,10,11,14,25,27,28,29,31,32,33,34,40,51,53,],[22,-9,22,22,-8,-12,22,22,22,22,22,22,-14,22,-13,]),'FALSE':([7,10,11,14,25,27,28,29,31,32,33,34,40,51,53,],[23,-9,23,23,-8,-12,23,23,23,23,23,23,-14,23,-13,]),'LPAREN':([8,13,21,],[24,29,34,]),'PV':([12,15,16,17,18,19,20,21,22,23,30,38,41,42,43,45,50,],[27,-16,-18,-20,-22,-23,-24,-25,-26,-27,40,-15,-17,-19,-21,-29,-28,]),'IGUAL':([12,15,16,17,18,19,20,21,22,23,30,38,39,41,42,43,45,46,50,],[28,-16,-18,-20,-22,-23,-24,-25,-26,-27,28,-15,28,-17,-19,-21,-29,28,-28,]),'RPAREN':([15,16,17,18,19,20,21,22,23,24,34,36,38,39,41,42,43,44,45,46,47,50,54,55,],[-16,-18,-20,-22,-23,-24,-25,-26,-27,37,45,48,-15,49,-17,-19,-21,50,-29,-31,-6,-28,-30,-7,]),'COMMA':([15,16,17,18,19,20,21,22,23,38,41,42,43,45,46,47,50,],[-16,-18,-20,-22,-23,-24,-25,-26,-27,-15,-17,-19,-21,-29,51,52,-28,]),'SOMA':([15,16,17,18,19,20,21,22,23,38,41,42,43,45,50,],[31,-18,-20,-22,-23,-24,-25,-26,-27,31,-17,-19,-21,-29,-28,]),'VEZES':([16,17,18,19,20,21,22,23,41,42,43,45,50,],[32,-20,-22,-23,-24,-25,-26,-27,32,-19,-21,-29,-28,]),'POT':([18,19,20,21,22,23,45,50,],[33,-23,-24,-25,-26,-27,-29,-28,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,2,],[1,5,]),'funcdecl':([0,2,],[2,2,]),'signature':([0,2,],[3,3,]),'body':([3,49,],[6,53,]),'stms':([7,11,],[9,26,]),'stm':([7,11,],[11,11,]),'exp':([7,11,14,29,34,51,],[12,12,30,39,46,46,]),'exp1':([7,11,14,28,29,34,51,],[15,15,15,38,15,15,15,]),'exp2':([7,11,14,28,29,31,34,51,],[16,16,16,16,16,41,16,16,]),'exp3':([7,11,14,28,29,31,32,33,34,51,],[17,17,17,17,17,17,42,43,17,17,]),'exp4':([7,11,14,28,29,31,32,33,34,51,],[18,18,18,18,18,18,18,18,18,18,]),'call':([7,11,14,28,29,31,32,33,34,51,],[19,19,19,19,19,19,19,19,19,19,]),'sigparams':([24,52,],[36,55,]),'params':([34,51,],[44,54,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> funcdecl','program',1,'p_program','ExpressionLanguageParser.py',22),
  ('program -> funcdecl program','program',2,'p_program','ExpressionLanguageParser.py',23),
  ('funcdecl -> signature body','funcdecl',2,'p_funcdecl','ExpressionLanguageParser.py',31),
  ('signature -> ID ID LPAREN sigparams RPAREN','signature',5,'p_signature','ExpressionLanguageParser.py',35),
  ('signature -> ID ID LPAREN RPAREN','signature',4,'p_signature','ExpressionLanguageParser.py',36),
  ('sigparams -> ID ID','sigparams',2,'p_sigparams','ExpressionLanguageParser.py',43),
  ('sigparams -> ID ID COMMA sigparams','sigparams',4,'p_sigparams','ExpressionLanguageParser.py',44),
  ('body -> LCHAV stms RCHAV','body',3,'p_body','ExpressionLanguageParser.py',52),
  ('body -> LCHAV RCHAV','body',2,'p_body','ExpressionLanguageParser.py',53),
  ('stms -> stm','stms',1,'p_stms','ExpressionLanguageParser.py',60),
  ('stms -> stm stms','stms',2,'p_stms','ExpressionLanguageParser.py',61),
  ('stm -> exp PV','stm',2,'p_stm','ExpressionLanguageParser.py',68),
  ('stm -> WHILE LPAREN exp RPAREN body','stm',5,'p_stm','ExpressionLanguageParser.py',69),
  ('stm -> RETURN exp PV','stm',3,'p_stm','ExpressionLanguageParser.py',70),
  ('exp -> exp IGUAL exp1','exp',3,'p_exp_assign','ExpressionLanguageParser.py',81),
  ('exp -> exp1','exp',1,'p_exp_assign','ExpressionLanguageParser.py',82),
  ('exp1 -> exp1 SOMA exp2','exp1',3,'p_exp1_soma','ExpressionLanguageParser.py',89),
  ('exp1 -> exp2','exp1',1,'p_exp1_soma','ExpressionLanguageParser.py',90),
  ('exp2 -> exp2 VEZES exp3','exp2',3,'p_exp2_vezes','ExpressionLanguageParser.py',98),
  ('exp2 -> exp3','exp2',1,'p_exp2_vezes','ExpressionLanguageParser.py',99),
  ('exp3 -> exp4 POT exp3','exp3',3,'p_exp3_pot','ExpressionLanguageParser.py',107),
  ('exp3 -> exp4','exp3',1,'p_exp3_pot','ExpressionLanguageParser.py',108),
  ('exp4 -> call','exp4',1,'p_exp4_call','ExpressionLanguageParser.py',115),
  ('exp4 -> NUMBER','exp4',1,'p_exp4_call','ExpressionLanguageParser.py',116),
  ('exp4 -> ID','exp4',1,'p_exp4_call','ExpressionLanguageParser.py',117),
  ('exp4 -> TRUE','exp4',1,'p_exp4_call','ExpressionLanguageParser.py',118),
  ('exp4 -> FALSE','exp4',1,'p_exp4_call','ExpressionLanguageParser.py',119),
  ('call -> ID LPAREN params RPAREN','call',4,'p_call_id_params','ExpressionLanguageParser.py',131),
  ('call -> ID LPAREN RPAREN','call',3,'p_call_id_params','ExpressionLanguageParser.py',132),
  ('params -> exp COMMA params','params',3,'p_params_ids','ExpressionLanguageParser.py',140),
  ('params -> exp','params',1,'p_params_ids','ExpressionLanguageParser.py',141),
]
