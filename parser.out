Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> funcdecl
Rule 2     program -> funcdecl program
Rule 3     funcdecl -> signature body
Rule 4     signature -> ID ID LPAREN sigparams RPAREN
Rule 5     signature -> ID ID LPAREN RPAREN
Rule 6     sigparams -> ID ID
Rule 7     sigparams -> ID ID COMMA sigparams
Rule 8     body -> LCHAV stms RCHAV
Rule 9     body -> LCHAV RCHAV
Rule 10    stms -> stm
Rule 11    stms -> stm stms
Rule 12    stm -> exp PV
Rule 13    stm -> WHILE LPAREN exp RPAREN body
Rule 14    stm -> RETURN exp PV
Rule 15    exp -> exp IGUAL exp1
Rule 16    exp -> exp1
Rule 17    exp1 -> exp1 SOMA exp2
Rule 18    exp1 -> exp2
Rule 19    exp2 -> exp2 VEZES exp3
Rule 20    exp2 -> exp3
Rule 21    exp3 -> exp4 POT exp3
Rule 22    exp3 -> exp4
Rule 23    exp4 -> call
Rule 24    exp4 -> NUMBER
Rule 25    exp4 -> ID
Rule 26    exp4 -> TRUE
Rule 27    exp4 -> FALSE
Rule 28    call -> ID LPAREN params RPAREN
Rule 29    call -> ID LPAREN RPAREN
Rule 30    params -> exp COMMA params
Rule 31    params -> exp

Terminals, with rules where they appear

COMMA                : 7 30
FALSE                : 27
ID                   : 4 4 5 5 6 6 7 7 25 28 29
IGUAL                : 15
LCHAV                : 8 9
LPAREN               : 4 5 13 28 29
NUMBER               : 24
POT                  : 21
PV                   : 12 14
RCHAV                : 8 9
RETURN               : 14
RPAREN               : 4 5 13 28 29
SOMA                 : 17
TRUE                 : 26
VEZES                : 19
WHILE                : 13
error                : 

Nonterminals, with rules where they appear

body                 : 3 13
call                 : 23
exp                  : 12 13 14 15 30 31
exp1                 : 15 16 17
exp2                 : 17 18 19
exp3                 : 19 20 21
exp4                 : 21 22
funcdecl             : 1 2
params               : 28 30
program              : 2 0
signature            : 3
sigparams            : 4 7
stm                  : 10 11
stms                 : 8 11

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . funcdecl
    (2) program -> . funcdecl program
    (3) funcdecl -> . signature body
    (4) signature -> . ID ID LPAREN sigparams RPAREN
    (5) signature -> . ID ID LPAREN RPAREN

    ID              shift and go to state 4

    program                        shift and go to state 1
    funcdecl                       shift and go to state 2
    signature                      shift and go to state 3

state 1

    (0) S' -> program .



state 2

    (1) program -> funcdecl .
    (2) program -> funcdecl . program
    (1) program -> . funcdecl
    (2) program -> . funcdecl program
    (3) funcdecl -> . signature body
    (4) signature -> . ID ID LPAREN sigparams RPAREN
    (5) signature -> . ID ID LPAREN RPAREN

    $end            reduce using rule 1 (program -> funcdecl .)
    ID              shift and go to state 4

    funcdecl                       shift and go to state 2
    program                        shift and go to state 5
    signature                      shift and go to state 3

state 3

    (3) funcdecl -> signature . body
    (8) body -> . LCHAV stms RCHAV
    (9) body -> . LCHAV RCHAV

    LCHAV           shift and go to state 7

    body                           shift and go to state 6

state 4

    (4) signature -> ID . ID LPAREN sigparams RPAREN
    (5) signature -> ID . ID LPAREN RPAREN

    ID              shift and go to state 8


state 5

    (2) program -> funcdecl program .

    $end            reduce using rule 2 (program -> funcdecl program .)


state 6

    (3) funcdecl -> signature body .

    ID              reduce using rule 3 (funcdecl -> signature body .)
    $end            reduce using rule 3 (funcdecl -> signature body .)


state 7

    (8) body -> LCHAV . stms RCHAV
    (9) body -> LCHAV . RCHAV
    (10) stms -> . stm
    (11) stms -> . stm stms
    (12) stm -> . exp PV
    (13) stm -> . WHILE LPAREN exp RPAREN body
    (14) stm -> . RETURN exp PV
    (15) exp -> . exp IGUAL exp1
    (16) exp -> . exp1
    (17) exp1 -> . exp1 SOMA exp2
    (18) exp1 -> . exp2
    (19) exp2 -> . exp2 VEZES exp3
    (20) exp2 -> . exp3
    (21) exp3 -> . exp4 POT exp3
    (22) exp3 -> . exp4
    (23) exp4 -> . call
    (24) exp4 -> . NUMBER
    (25) exp4 -> . ID
    (26) exp4 -> . TRUE
    (27) exp4 -> . FALSE
    (28) call -> . ID LPAREN params RPAREN
    (29) call -> . ID LPAREN RPAREN

    RCHAV           shift and go to state 10
    WHILE           shift and go to state 13
    RETURN          shift and go to state 14
    NUMBER          shift and go to state 20
    ID              shift and go to state 21
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23

    stms                           shift and go to state 9
    stm                            shift and go to state 11
    exp                            shift and go to state 12
    exp1                           shift and go to state 15
    exp2                           shift and go to state 16
    exp3                           shift and go to state 17
    exp4                           shift and go to state 18
    call                           shift and go to state 19

state 8

    (4) signature -> ID ID . LPAREN sigparams RPAREN
    (5) signature -> ID ID . LPAREN RPAREN

    LPAREN          shift and go to state 24


state 9

    (8) body -> LCHAV stms . RCHAV

    RCHAV           shift and go to state 25


state 10

    (9) body -> LCHAV RCHAV .

    ID              reduce using rule 9 (body -> LCHAV RCHAV .)
    $end            reduce using rule 9 (body -> LCHAV RCHAV .)
    WHILE           reduce using rule 9 (body -> LCHAV RCHAV .)
    RETURN          reduce using rule 9 (body -> LCHAV RCHAV .)
    NUMBER          reduce using rule 9 (body -> LCHAV RCHAV .)
    TRUE            reduce using rule 9 (body -> LCHAV RCHAV .)
    FALSE           reduce using rule 9 (body -> LCHAV RCHAV .)
    RCHAV           reduce using rule 9 (body -> LCHAV RCHAV .)


state 11

    (10) stms -> stm .
    (11) stms -> stm . stms
    (10) stms -> . stm
    (11) stms -> . stm stms
    (12) stm -> . exp PV
    (13) stm -> . WHILE LPAREN exp RPAREN body
    (14) stm -> . RETURN exp PV
    (15) exp -> . exp IGUAL exp1
    (16) exp -> . exp1
    (17) exp1 -> . exp1 SOMA exp2
    (18) exp1 -> . exp2
    (19) exp2 -> . exp2 VEZES exp3
    (20) exp2 -> . exp3
    (21) exp3 -> . exp4 POT exp3
    (22) exp3 -> . exp4
    (23) exp4 -> . call
    (24) exp4 -> . NUMBER
    (25) exp4 -> . ID
    (26) exp4 -> . TRUE
    (27) exp4 -> . FALSE
    (28) call -> . ID LPAREN params RPAREN
    (29) call -> . ID LPAREN RPAREN

    RCHAV           reduce using rule 10 (stms -> stm .)
    WHILE           shift and go to state 13
    RETURN          shift and go to state 14
    NUMBER          shift and go to state 20
    ID              shift and go to state 21
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23

    stm                            shift and go to state 11
    stms                           shift and go to state 26
    exp                            shift and go to state 12
    exp1                           shift and go to state 15
    exp2                           shift and go to state 16
    exp3                           shift and go to state 17
    exp4                           shift and go to state 18
    call                           shift and go to state 19

state 12

    (12) stm -> exp . PV
    (15) exp -> exp . IGUAL exp1

    PV              shift and go to state 27
    IGUAL           shift and go to state 28


state 13

    (13) stm -> WHILE . LPAREN exp RPAREN body

    LPAREN          shift and go to state 29


state 14

    (14) stm -> RETURN . exp PV
    (15) exp -> . exp IGUAL exp1
    (16) exp -> . exp1
    (17) exp1 -> . exp1 SOMA exp2
    (18) exp1 -> . exp2
    (19) exp2 -> . exp2 VEZES exp3
    (20) exp2 -> . exp3
    (21) exp3 -> . exp4 POT exp3
    (22) exp3 -> . exp4
    (23) exp4 -> . call
    (24) exp4 -> . NUMBER
    (25) exp4 -> . ID
    (26) exp4 -> . TRUE
    (27) exp4 -> . FALSE
    (28) call -> . ID LPAREN params RPAREN
    (29) call -> . ID LPAREN RPAREN

    NUMBER          shift and go to state 20
    ID              shift and go to state 21
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23

    exp                            shift and go to state 30
    exp1                           shift and go to state 15
    exp2                           shift and go to state 16
    exp3                           shift and go to state 17
    exp4                           shift and go to state 18
    call                           shift and go to state 19

state 15

    (16) exp -> exp1 .
    (17) exp1 -> exp1 . SOMA exp2

    PV              reduce using rule 16 (exp -> exp1 .)
    IGUAL           reduce using rule 16 (exp -> exp1 .)
    RPAREN          reduce using rule 16 (exp -> exp1 .)
    COMMA           reduce using rule 16 (exp -> exp1 .)
    SOMA            shift and go to state 31


state 16

    (18) exp1 -> exp2 .
    (19) exp2 -> exp2 . VEZES exp3

    SOMA            reduce using rule 18 (exp1 -> exp2 .)
    PV              reduce using rule 18 (exp1 -> exp2 .)
    IGUAL           reduce using rule 18 (exp1 -> exp2 .)
    RPAREN          reduce using rule 18 (exp1 -> exp2 .)
    COMMA           reduce using rule 18 (exp1 -> exp2 .)
    VEZES           shift and go to state 32


state 17

    (20) exp2 -> exp3 .

    VEZES           reduce using rule 20 (exp2 -> exp3 .)
    SOMA            reduce using rule 20 (exp2 -> exp3 .)
    PV              reduce using rule 20 (exp2 -> exp3 .)
    IGUAL           reduce using rule 20 (exp2 -> exp3 .)
    RPAREN          reduce using rule 20 (exp2 -> exp3 .)
    COMMA           reduce using rule 20 (exp2 -> exp3 .)


state 18

    (21) exp3 -> exp4 . POT exp3
    (22) exp3 -> exp4 .

    POT             shift and go to state 33
    VEZES           reduce using rule 22 (exp3 -> exp4 .)
    SOMA            reduce using rule 22 (exp3 -> exp4 .)
    PV              reduce using rule 22 (exp3 -> exp4 .)
    IGUAL           reduce using rule 22 (exp3 -> exp4 .)
    RPAREN          reduce using rule 22 (exp3 -> exp4 .)
    COMMA           reduce using rule 22 (exp3 -> exp4 .)


state 19

    (23) exp4 -> call .

    POT             reduce using rule 23 (exp4 -> call .)
    VEZES           reduce using rule 23 (exp4 -> call .)
    SOMA            reduce using rule 23 (exp4 -> call .)
    PV              reduce using rule 23 (exp4 -> call .)
    IGUAL           reduce using rule 23 (exp4 -> call .)
    RPAREN          reduce using rule 23 (exp4 -> call .)
    COMMA           reduce using rule 23 (exp4 -> call .)


state 20

    (24) exp4 -> NUMBER .

    POT             reduce using rule 24 (exp4 -> NUMBER .)
    VEZES           reduce using rule 24 (exp4 -> NUMBER .)
    SOMA            reduce using rule 24 (exp4 -> NUMBER .)
    PV              reduce using rule 24 (exp4 -> NUMBER .)
    IGUAL           reduce using rule 24 (exp4 -> NUMBER .)
    RPAREN          reduce using rule 24 (exp4 -> NUMBER .)
    COMMA           reduce using rule 24 (exp4 -> NUMBER .)


state 21

    (25) exp4 -> ID .
    (28) call -> ID . LPAREN params RPAREN
    (29) call -> ID . LPAREN RPAREN

    POT             reduce using rule 25 (exp4 -> ID .)
    VEZES           reduce using rule 25 (exp4 -> ID .)
    SOMA            reduce using rule 25 (exp4 -> ID .)
    PV              reduce using rule 25 (exp4 -> ID .)
    IGUAL           reduce using rule 25 (exp4 -> ID .)
    RPAREN          reduce using rule 25 (exp4 -> ID .)
    COMMA           reduce using rule 25 (exp4 -> ID .)
    LPAREN          shift and go to state 34


state 22

    (26) exp4 -> TRUE .

    POT             reduce using rule 26 (exp4 -> TRUE .)
    VEZES           reduce using rule 26 (exp4 -> TRUE .)
    SOMA            reduce using rule 26 (exp4 -> TRUE .)
    PV              reduce using rule 26 (exp4 -> TRUE .)
    IGUAL           reduce using rule 26 (exp4 -> TRUE .)
    RPAREN          reduce using rule 26 (exp4 -> TRUE .)
    COMMA           reduce using rule 26 (exp4 -> TRUE .)


state 23

    (27) exp4 -> FALSE .

    POT             reduce using rule 27 (exp4 -> FALSE .)
    VEZES           reduce using rule 27 (exp4 -> FALSE .)
    SOMA            reduce using rule 27 (exp4 -> FALSE .)
    PV              reduce using rule 27 (exp4 -> FALSE .)
    IGUAL           reduce using rule 27 (exp4 -> FALSE .)
    RPAREN          reduce using rule 27 (exp4 -> FALSE .)
    COMMA           reduce using rule 27 (exp4 -> FALSE .)


state 24

    (4) signature -> ID ID LPAREN . sigparams RPAREN
    (5) signature -> ID ID LPAREN . RPAREN
    (6) sigparams -> . ID ID
    (7) sigparams -> . ID ID COMMA sigparams

    RPAREN          shift and go to state 37
    ID              shift and go to state 35

    sigparams                      shift and go to state 36

state 25

    (8) body -> LCHAV stms RCHAV .

    ID              reduce using rule 8 (body -> LCHAV stms RCHAV .)
    $end            reduce using rule 8 (body -> LCHAV stms RCHAV .)
    WHILE           reduce using rule 8 (body -> LCHAV stms RCHAV .)
    RETURN          reduce using rule 8 (body -> LCHAV stms RCHAV .)
    NUMBER          reduce using rule 8 (body -> LCHAV stms RCHAV .)
    TRUE            reduce using rule 8 (body -> LCHAV stms RCHAV .)
    FALSE           reduce using rule 8 (body -> LCHAV stms RCHAV .)
    RCHAV           reduce using rule 8 (body -> LCHAV stms RCHAV .)


state 26

    (11) stms -> stm stms .

    RCHAV           reduce using rule 11 (stms -> stm stms .)


state 27

    (12) stm -> exp PV .

    WHILE           reduce using rule 12 (stm -> exp PV .)
    RETURN          reduce using rule 12 (stm -> exp PV .)
    NUMBER          reduce using rule 12 (stm -> exp PV .)
    ID              reduce using rule 12 (stm -> exp PV .)
    TRUE            reduce using rule 12 (stm -> exp PV .)
    FALSE           reduce using rule 12 (stm -> exp PV .)
    RCHAV           reduce using rule 12 (stm -> exp PV .)


state 28

    (15) exp -> exp IGUAL . exp1
    (17) exp1 -> . exp1 SOMA exp2
    (18) exp1 -> . exp2
    (19) exp2 -> . exp2 VEZES exp3
    (20) exp2 -> . exp3
    (21) exp3 -> . exp4 POT exp3
    (22) exp3 -> . exp4
    (23) exp4 -> . call
    (24) exp4 -> . NUMBER
    (25) exp4 -> . ID
    (26) exp4 -> . TRUE
    (27) exp4 -> . FALSE
    (28) call -> . ID LPAREN params RPAREN
    (29) call -> . ID LPAREN RPAREN

    NUMBER          shift and go to state 20
    ID              shift and go to state 21
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23

    exp1                           shift and go to state 38
    exp2                           shift and go to state 16
    exp3                           shift and go to state 17
    exp4                           shift and go to state 18
    call                           shift and go to state 19

state 29

    (13) stm -> WHILE LPAREN . exp RPAREN body
    (15) exp -> . exp IGUAL exp1
    (16) exp -> . exp1
    (17) exp1 -> . exp1 SOMA exp2
    (18) exp1 -> . exp2
    (19) exp2 -> . exp2 VEZES exp3
    (20) exp2 -> . exp3
    (21) exp3 -> . exp4 POT exp3
    (22) exp3 -> . exp4
    (23) exp4 -> . call
    (24) exp4 -> . NUMBER
    (25) exp4 -> . ID
    (26) exp4 -> . TRUE
    (27) exp4 -> . FALSE
    (28) call -> . ID LPAREN params RPAREN
    (29) call -> . ID LPAREN RPAREN

    NUMBER          shift and go to state 20
    ID              shift and go to state 21
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23

    exp                            shift and go to state 39
    exp1                           shift and go to state 15
    exp2                           shift and go to state 16
    exp3                           shift and go to state 17
    exp4                           shift and go to state 18
    call                           shift and go to state 19

state 30

    (14) stm -> RETURN exp . PV
    (15) exp -> exp . IGUAL exp1

    PV              shift and go to state 40
    IGUAL           shift and go to state 28


state 31

    (17) exp1 -> exp1 SOMA . exp2
    (19) exp2 -> . exp2 VEZES exp3
    (20) exp2 -> . exp3
    (21) exp3 -> . exp4 POT exp3
    (22) exp3 -> . exp4
    (23) exp4 -> . call
    (24) exp4 -> . NUMBER
    (25) exp4 -> . ID
    (26) exp4 -> . TRUE
    (27) exp4 -> . FALSE
    (28) call -> . ID LPAREN params RPAREN
    (29) call -> . ID LPAREN RPAREN

    NUMBER          shift and go to state 20
    ID              shift and go to state 21
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23

    exp2                           shift and go to state 41
    exp3                           shift and go to state 17
    exp4                           shift and go to state 18
    call                           shift and go to state 19

state 32

    (19) exp2 -> exp2 VEZES . exp3
    (21) exp3 -> . exp4 POT exp3
    (22) exp3 -> . exp4
    (23) exp4 -> . call
    (24) exp4 -> . NUMBER
    (25) exp4 -> . ID
    (26) exp4 -> . TRUE
    (27) exp4 -> . FALSE
    (28) call -> . ID LPAREN params RPAREN
    (29) call -> . ID LPAREN RPAREN

    NUMBER          shift and go to state 20
    ID              shift and go to state 21
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23

    exp3                           shift and go to state 42
    exp4                           shift and go to state 18
    call                           shift and go to state 19

state 33

    (21) exp3 -> exp4 POT . exp3
    (21) exp3 -> . exp4 POT exp3
    (22) exp3 -> . exp4
    (23) exp4 -> . call
    (24) exp4 -> . NUMBER
    (25) exp4 -> . ID
    (26) exp4 -> . TRUE
    (27) exp4 -> . FALSE
    (28) call -> . ID LPAREN params RPAREN
    (29) call -> . ID LPAREN RPAREN

    NUMBER          shift and go to state 20
    ID              shift and go to state 21
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23

    exp4                           shift and go to state 18
    exp3                           shift and go to state 43
    call                           shift and go to state 19

state 34

    (28) call -> ID LPAREN . params RPAREN
    (29) call -> ID LPAREN . RPAREN
    (30) params -> . exp COMMA params
    (31) params -> . exp
    (15) exp -> . exp IGUAL exp1
    (16) exp -> . exp1
    (17) exp1 -> . exp1 SOMA exp2
    (18) exp1 -> . exp2
    (19) exp2 -> . exp2 VEZES exp3
    (20) exp2 -> . exp3
    (21) exp3 -> . exp4 POT exp3
    (22) exp3 -> . exp4
    (23) exp4 -> . call
    (24) exp4 -> . NUMBER
    (25) exp4 -> . ID
    (26) exp4 -> . TRUE
    (27) exp4 -> . FALSE
    (28) call -> . ID LPAREN params RPAREN
    (29) call -> . ID LPAREN RPAREN

    RPAREN          shift and go to state 45
    NUMBER          shift and go to state 20
    ID              shift and go to state 21
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23

    params                         shift and go to state 44
    exp                            shift and go to state 46
    exp1                           shift and go to state 15
    exp2                           shift and go to state 16
    exp3                           shift and go to state 17
    exp4                           shift and go to state 18
    call                           shift and go to state 19

state 35

    (6) sigparams -> ID . ID
    (7) sigparams -> ID . ID COMMA sigparams

    ID              shift and go to state 47


state 36

    (4) signature -> ID ID LPAREN sigparams . RPAREN

    RPAREN          shift and go to state 48


state 37

    (5) signature -> ID ID LPAREN RPAREN .

    LCHAV           reduce using rule 5 (signature -> ID ID LPAREN RPAREN .)


state 38

    (15) exp -> exp IGUAL exp1 .
    (17) exp1 -> exp1 . SOMA exp2

    PV              reduce using rule 15 (exp -> exp IGUAL exp1 .)
    IGUAL           reduce using rule 15 (exp -> exp IGUAL exp1 .)
    RPAREN          reduce using rule 15 (exp -> exp IGUAL exp1 .)
    COMMA           reduce using rule 15 (exp -> exp IGUAL exp1 .)
    SOMA            shift and go to state 31


state 39

    (13) stm -> WHILE LPAREN exp . RPAREN body
    (15) exp -> exp . IGUAL exp1

    RPAREN          shift and go to state 49
    IGUAL           shift and go to state 28


state 40

    (14) stm -> RETURN exp PV .

    WHILE           reduce using rule 14 (stm -> RETURN exp PV .)
    RETURN          reduce using rule 14 (stm -> RETURN exp PV .)
    NUMBER          reduce using rule 14 (stm -> RETURN exp PV .)
    ID              reduce using rule 14 (stm -> RETURN exp PV .)
    TRUE            reduce using rule 14 (stm -> RETURN exp PV .)
    FALSE           reduce using rule 14 (stm -> RETURN exp PV .)
    RCHAV           reduce using rule 14 (stm -> RETURN exp PV .)


state 41

    (17) exp1 -> exp1 SOMA exp2 .
    (19) exp2 -> exp2 . VEZES exp3

    SOMA            reduce using rule 17 (exp1 -> exp1 SOMA exp2 .)
    PV              reduce using rule 17 (exp1 -> exp1 SOMA exp2 .)
    IGUAL           reduce using rule 17 (exp1 -> exp1 SOMA exp2 .)
    RPAREN          reduce using rule 17 (exp1 -> exp1 SOMA exp2 .)
    COMMA           reduce using rule 17 (exp1 -> exp1 SOMA exp2 .)
    VEZES           shift and go to state 32


state 42

    (19) exp2 -> exp2 VEZES exp3 .

    VEZES           reduce using rule 19 (exp2 -> exp2 VEZES exp3 .)
    SOMA            reduce using rule 19 (exp2 -> exp2 VEZES exp3 .)
    PV              reduce using rule 19 (exp2 -> exp2 VEZES exp3 .)
    IGUAL           reduce using rule 19 (exp2 -> exp2 VEZES exp3 .)
    RPAREN          reduce using rule 19 (exp2 -> exp2 VEZES exp3 .)
    COMMA           reduce using rule 19 (exp2 -> exp2 VEZES exp3 .)


state 43

    (21) exp3 -> exp4 POT exp3 .

    VEZES           reduce using rule 21 (exp3 -> exp4 POT exp3 .)
    SOMA            reduce using rule 21 (exp3 -> exp4 POT exp3 .)
    PV              reduce using rule 21 (exp3 -> exp4 POT exp3 .)
    IGUAL           reduce using rule 21 (exp3 -> exp4 POT exp3 .)
    RPAREN          reduce using rule 21 (exp3 -> exp4 POT exp3 .)
    COMMA           reduce using rule 21 (exp3 -> exp4 POT exp3 .)


state 44

    (28) call -> ID LPAREN params . RPAREN

    RPAREN          shift and go to state 50


state 45

    (29) call -> ID LPAREN RPAREN .

    POT             reduce using rule 29 (call -> ID LPAREN RPAREN .)
    VEZES           reduce using rule 29 (call -> ID LPAREN RPAREN .)
    SOMA            reduce using rule 29 (call -> ID LPAREN RPAREN .)
    PV              reduce using rule 29 (call -> ID LPAREN RPAREN .)
    IGUAL           reduce using rule 29 (call -> ID LPAREN RPAREN .)
    RPAREN          reduce using rule 29 (call -> ID LPAREN RPAREN .)
    COMMA           reduce using rule 29 (call -> ID LPAREN RPAREN .)


state 46

    (30) params -> exp . COMMA params
    (31) params -> exp .
    (15) exp -> exp . IGUAL exp1

    COMMA           shift and go to state 51
    RPAREN          reduce using rule 31 (params -> exp .)
    IGUAL           shift and go to state 28


state 47

    (6) sigparams -> ID ID .
    (7) sigparams -> ID ID . COMMA sigparams

    RPAREN          reduce using rule 6 (sigparams -> ID ID .)
    COMMA           shift and go to state 52


state 48

    (4) signature -> ID ID LPAREN sigparams RPAREN .

    LCHAV           reduce using rule 4 (signature -> ID ID LPAREN sigparams RPAREN .)


state 49

    (13) stm -> WHILE LPAREN exp RPAREN . body
    (8) body -> . LCHAV stms RCHAV
    (9) body -> . LCHAV RCHAV

    LCHAV           shift and go to state 7

    body                           shift and go to state 53

state 50

    (28) call -> ID LPAREN params RPAREN .

    POT             reduce using rule 28 (call -> ID LPAREN params RPAREN .)
    VEZES           reduce using rule 28 (call -> ID LPAREN params RPAREN .)
    SOMA            reduce using rule 28 (call -> ID LPAREN params RPAREN .)
    PV              reduce using rule 28 (call -> ID LPAREN params RPAREN .)
    IGUAL           reduce using rule 28 (call -> ID LPAREN params RPAREN .)
    RPAREN          reduce using rule 28 (call -> ID LPAREN params RPAREN .)
    COMMA           reduce using rule 28 (call -> ID LPAREN params RPAREN .)


state 51

    (30) params -> exp COMMA . params
    (30) params -> . exp COMMA params
    (31) params -> . exp
    (15) exp -> . exp IGUAL exp1
    (16) exp -> . exp1
    (17) exp1 -> . exp1 SOMA exp2
    (18) exp1 -> . exp2
    (19) exp2 -> . exp2 VEZES exp3
    (20) exp2 -> . exp3
    (21) exp3 -> . exp4 POT exp3
    (22) exp3 -> . exp4
    (23) exp4 -> . call
    (24) exp4 -> . NUMBER
    (25) exp4 -> . ID
    (26) exp4 -> . TRUE
    (27) exp4 -> . FALSE
    (28) call -> . ID LPAREN params RPAREN
    (29) call -> . ID LPAREN RPAREN

    NUMBER          shift and go to state 20
    ID              shift and go to state 21
    TRUE            shift and go to state 22
    FALSE           shift and go to state 23

    exp                            shift and go to state 46
    params                         shift and go to state 54
    exp1                           shift and go to state 15
    exp2                           shift and go to state 16
    exp3                           shift and go to state 17
    exp4                           shift and go to state 18
    call                           shift and go to state 19

state 52

    (7) sigparams -> ID ID COMMA . sigparams
    (6) sigparams -> . ID ID
    (7) sigparams -> . ID ID COMMA sigparams

    ID              shift and go to state 35

    sigparams                      shift and go to state 55

state 53

    (13) stm -> WHILE LPAREN exp RPAREN body .

    WHILE           reduce using rule 13 (stm -> WHILE LPAREN exp RPAREN body .)
    RETURN          reduce using rule 13 (stm -> WHILE LPAREN exp RPAREN body .)
    NUMBER          reduce using rule 13 (stm -> WHILE LPAREN exp RPAREN body .)
    ID              reduce using rule 13 (stm -> WHILE LPAREN exp RPAREN body .)
    TRUE            reduce using rule 13 (stm -> WHILE LPAREN exp RPAREN body .)
    FALSE           reduce using rule 13 (stm -> WHILE LPAREN exp RPAREN body .)
    RCHAV           reduce using rule 13 (stm -> WHILE LPAREN exp RPAREN body .)


state 54

    (30) params -> exp COMMA params .

    RPAREN          reduce using rule 30 (params -> exp COMMA params .)


state 55

    (7) sigparams -> ID ID COMMA sigparams .

    RPAREN          reduce using rule 7 (sigparams -> ID ID COMMA sigparams .)

